# -*- mode: ruby -*-
# vi: set ft=ruby :

# vagrant plugin install vagrant-reload

# Vagrantfile API/syntax version. Don't touch unless you know what you're doing!
VAGRANTFILE_API_VERSION = "2"
#Vagrant::DEFAULT_SERVER_URL.replace('https://vagrantcloud.com')

# Number of virtual machines (configured as linked clones to save harddisk)
VMS_COUNT = 2

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|

  # Every Vagrant virtual environment requires a box to build off of.
  config.vm.box = "bento/ubuntu-18.04"

  config.ssh.username = 'vagrant'
  config.ssh.password = 'vagrant'
  config.ssh.insert_key = false

  # Custom: SSH graphical, X11
  config.ssh.forward_agent = true
  config.ssh.forward_x11 = true

  # avoid mounting shared folder
  config.vm.synced_folder '.', '/vagrant', disabled: true

  ####################
  # Defining the MPTCP UE i VM
  ####################
  (1..VMS_COUNT).each do |i|
    config.vm.define "mptcpUe#{i}" do |mptcpUe|
      mptcpUe.vm.network "forwarded_port", guest: 22, host: "#{i*10000+2222}", protocol: "tcp"                        # Port forwarding through the NAT interface
      mptcpUe.vm.network "forwarded_port", guest: 8000, host: "#{i*10000+8000}", protocol: "tcp"                        # Port forwarding through the NAT interface
      mptcpUe.vm.network "private_network", ip: "10.1.1.#{3*(i-1)+1}", auto_config: true, virtualbox__intnet: "ue_ue" # Interface 1 connecting to second machine
      mptcpUe.vm.network "private_network", ip: "10.1.1.#{3*(i-1)+2}", auto_config: true, virtualbox__intnet: "ue_ue" # Interface 2 connecting to second machine
      mptcpUe.vm.network "private_network", ip: "10.1.1.#{3*(i-1)+3}", auto_config: true, virtualbox__intnet: "ue_ue" # Interface 3 connecting to second machine
      mptcpUe.vm.hostname = "mptcpUe#{i}"
      mptcpUe.vm.provider :virtualbox do |vm|
        # Linked clones
        #vm.linked_clone = true
        # Configure networking interfaces
        vm.customize ["modifyvm", :id, "--nicpromisc2", "allow-all"]
        vm.customize ["modifyvm", :id, "--nicpromisc3", "allow-all"]
        vm.customize ["modifyvm", :id, "--nicpromisc4", "allow-all"]
        # Config name that appears in virtual box
        vm.name = "mptcpUe#{i}"
        # DNS queries to the host, which becomes a DNS Proxy
        vm.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
        # Lease more RAM to the guest
        vm.customize ["modifyvm", :id, "--memory", "4096"]
        # Set number of CPUs
        vm.customize ["modifyvm", :id, "--cpus", 2]
      end
      # Provisioning
      mptcpUe.vm.provision "file", source: "./vagrant", destination: "$HOME/vagrant"
      mptcpUe.vm.provision "shell", path: "vagrant/mptcp_kernel55wrr_installation.sh", privileged: false
      mptcpUe.vm.provision :reload
      mptcpUe.vm.provision "shell", path: "vagrant/mptcp_installation.sh", privileged: false
      mptcpUe.vm.provision "shell", path: "vagrant/initial_testing_2machines.sh", privileged: false
      mptcpUe.vm.provision "shell", path: "vagrant/rest_api_installation.sh", privileged: false
    end
  end
end
